<?php

namespace App\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PaymentsRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PaymentsRepository extends EntityRepository
{
    public function getUserAccountsStatus(\App\Entity\Users $User)
    {
        $query = $this->getEntityManager()
            ->createQuery("SELECT a, p, sum(p.amount) as total FROM App\Entity\Payments p
							JOIN p.accountId a
							JOIN p.currencyId c
							WHERE a.userId = :userId
							group by c.id, a.id")
            ->setParameter('userId', $User->getId());

        return $query->getResult();
    }

    public function getUserAccountPaymentsQuery($accountId, \App\Entity\Users $user)
    {
        $query = $this->getAllUserPaymentsQueryBuilder($user)
            ->andWhere('p.accountId = :accountId')
            ->setParameter('accountId', $accountId)
            ->getQuery();

        return $query;
    }

    public function getAllUserPaymentsQueryBuilder(\App\Entity\Users $user)
    {
        $qb = $this->getEntityManager()->createQueryBuilder()
            ->select('p')->from('App\Entity\Payments', 'p')
            ->join('p.accountId', 'a')
            ->join('p.operationId', 'o')
            ->where('a.userId = :userId')
            ->orderBy('o.date',  'DESC')
            ->setParameter('userId', $user->getId());

        return $qb;
    }

    public function getUserPaymentsTagsQuery(\App\Entity\Users $user)
    {
        $query = $this->getAllUserPaymentsQueryBuilder($user)
            ->groupBy('o.tagId')->getQuery();

        return $query;
    }

    public function findAllOrderByDate()
    {
        return $this->getEntityManager()
            ->createQuery('Select p from Operations p order by p.date desc')
            ->getResult();
    }
}
